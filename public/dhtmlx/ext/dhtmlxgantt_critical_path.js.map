{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./sources/core/relations/links_builder.js","webpack://[name]/./sources/utils/helpers.js","webpack://[name]/./sources/core/relations/graph_helper.js","webpack://[name]/./sources/core/relations/links_common.js","webpack://[name]/./sources/ext/critical_path/critical_path.js","webpack://[name]/./sources/ext/critical_path/slack.js","webpack://[name]/./sources/ext/critical_path.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gantt","getVirtualRoot","mixin","getSubtaskDates","id","config","root_id","type","types","project","$source","$target","$virtual","getLinkedTasks","includePredecessors","startIds","clearCache","_isLinksCacheEnabled","_startLinksCache","relations","visited","result","length","this","_getLinkedTasks","push","_endLinksCache","_collectRelations","rootObj","isChild","visitedLinks","linkKey","successors","_getSuccessors","predecessors","_getPredecessors","hashSum","rootTask","visitedTasks","output","from","undefined","tasksStack","current","pop","isTaskExists","getTask","rel","isSameParent","sourceParent","targetParent","target","hasChild","children","getChildren","units","second","minute","hour","day","week","month","quarter","year","arrayFilter","arr","callback","filter","getSecondsInUnit","unit","forEach","workArray","slice","arrayMap","map","resArray","arrayFind","find","arrayDifference","item","arraySome","hashToArray","hash","sortArrayOfHash","field","desc","compare","a","b","sort","throttle","timeout","wait","apply","arguments","setTimeout","isArray","obj","Array","isDate","getFullYear","getMonth","getDate","isStringObject","Function","toString","constructor","isNumberObject","isBooleanObject","delay","timer","$cancelTimeout","$pending","args","clearTimeout","$execute","objectKeys","keys","requestAnimationFrame","w","webkitRequestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","cb","isEventable","attachEvent","detachEvent","helpers","getVertices","ids","len","source","vertices","topologicalSort","edges","$incoming","successor","S","v","L","node","groupAdjacentEdges","edge","res","tarjanStronglyConnectedComponents","verticesHash","stack","edgesFromTasks","recurse","connectedComponents","getVertex","workStack","index","lowLink","onStack","e","Math","min","com","tasks","links","findLoops","cycles","component","_get_linked_task","link","getTarget","task","taskId","_get_link_target","_get_link_source","caching","formattedLinksStash","inheritedSuccessorsStash","inheritedPredecessorsStash","getPredecessorsCache","_formatLink","isSummaryTask","isChildOf","_getImplicitLinks","respectTargetOffset","auto_scheduling_move_projects","targetDates","start_date","end_date","to","getState","drag_id","calculateDuration","fromLength","fromTask","j","toLength","toTask","lag","subtaskLink","_convertToFinishToStartLink","taskParent","_isAutoSchedulable","auto_scheduling","parent","selectOffset","selectSourceLinks","skipChild","eachTask","linksCollection","siblingLink","getLink","siblingId","siblingTask","abs","duration","_getDirectDependencies","selectSuccessors","linksIds","concat","_getInheritedDependencies","cacheCollection","stop","inheritedRelations","eachParent","parentDependencies","_getDirectSuccessors","_getInheritedSuccessors","_getDirectPredecessors","_getInheritedPredecessors","skipInherited","String","sourceTask","targetTask","finish_to_start","preferredStart","additionalLag","start_to_start","finish_to_finish","start_to_finish","linksBuilder","graphHelper","_isProjectEnd","_hasDuration","_getProjectEnd","_needRecalc","_cache","reset","_isRecalcNeeded","_getLinks","_calculateBranch","path","criticalTasks","adjacentLinks","next","_getSlack","_calculateSummaryTasks","summaryHash","criticalHash","getParent","_calculate","summaryTasks","isCriticalTask","init","resetCache","handleTaskIdChange","oldId","newId","criticalPathHandler","highlight_critical_path","render","refreshTask","_private","_freeSlack","_totalSlack","_slackNeedCalculate","_linkedTasksById","_calculateTotalSlack","linksByTaskId","entry","slack","getFreeSlack","minSlack","linked","totalSlackByTaskId","_chainSlackCount","_slacksChanged","additional","targetWithMinimalSlack","_getTargetWithMinimalSlack","_calculateTaskSlack","_calculateRelationSlack","_calculateHierarchySlack","_calculateLinkSlack","linkId","getSlack","max","_resetTotalSlackCache","_shouldCalculateTotalSlack","getTotalSlack","dropCachedFreeSlack","slackHandler","criticalPath","assert","isCriticalLink","task1","task2","common","newSlack","next_task","relation","getTaskType","milestone"],"mappings":"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","file":"ext/dhtmlxgantt_critical_path.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext/dhtmlxgantt_critical_path\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext/dhtmlxgantt_critical_path\"] = factory();\n\telse\n\t\troot[\"ext/dhtmlxgantt_critical_path\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 261);\n","module.exports = function(gantt) {\n\treturn {\n\t\tgetVirtualRoot: function(){\n\t\t\treturn gantt.mixin(\n\t\t\t\tgantt.getSubtaskDates(),\n\t\t\t\t{\n\t\t\t\t\tid: gantt.config.root_id,\n\t\t\t\t\ttype: gantt.config.types.project,\n\t\t\t\t\t$source: [],\n\t\t\t\t\t$target: [],\n\t\t\t\t\t$virtual: true\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\n\t\tgetLinkedTasks: function(id, includePredecessors){\n\t\t\tvar startIds = [id];\n\t\n\t\t\t//TODO: format links cache\n\t\t\tvar clearCache = false;\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar relations = [];\n\t\t\tvar visited = {};\n\t\t\tvar result = {};\n\t\t\tfor(var i = 0; i < startIds.length; i++){\n\t\t\t\tthis._getLinkedTasks(startIds[i], visited, includePredecessors, result);\n\t\t\t}\n\t\n\t\t\tfor(var i in result){\n\t\t\t\trelations.push(result[i]);\n\t\t\t}\n\t\n\t\t\t//TODO: remove redundant edges before continue https://en.wikipedia.org/wiki/Transitive_reduction\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn relations;\n\t\t},\n\t\n\t\t_collectRelations: function(rootObj, isChild, includePredecessors, visitedLinks){\n\t\t\tvar successors = gantt._getSuccessors(rootObj, isChild);\n\t\n\t\t\tvar predecessors = [];\n\t\t\tif (includePredecessors) {\n\t\t\t\tpredecessors = gantt._getPredecessors(rootObj, isChild);\n\t\t\t}\n\t\t\t\n\t\t\tvar linkKey;\n\t\t\tvar relations = [];\n\t\t\tfor(var i = 0; i < successors.length; i++){\n\t\t\t\tlinkKey = successors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(successors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var i = 0; i < predecessors.length; i++){\n\t\t\t\tlinkKey = predecessors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(predecessors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn relations;\n\t\t},\n\t\t_getLinkedTasks: function(rootTask, visitedTasks, includePredecessors, output) {\n\t\t\tvar from = rootTask === undefined ? gantt.config.root_id : rootTask;\n\t\t\tvar visitedTasks = {};\n\t\t\tvar visitedLinks = {};\n\t\t\tvar rootObj;\n\t\n\t\t\tvar tasksStack = [{from: from, includePredecessors: includePredecessors, isChild:false}];\n\t\n\t\t\twhile(tasksStack.length){\n\t\t\t\tvar current = tasksStack.pop();\n\t\t\t\tvar isChild = current.isChild;\n\t\n\t\t\t\tfrom = current.from;\n\t\t\t\tif(visitedTasks[from]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trootObj = gantt.isTaskExists(from) ? gantt.getTask(from) : this.getVirtualRoot();\n\t\t\t\tvisitedTasks[from] = true;\n\t\t\t\t\n\t\t\t\tvar relations = this._collectRelations(rootObj, isChild, includePredecessors, visitedLinks);\n\t\n\t\t\t\tfor(var i=0; i < relations.length; i++){\n\t\t\t\t\tvar rel = relations[i];\n\t\t\t\t\toutput[rel.hashSum] = rel;\n\t\t\t\t\tvar isSameParent = rel.sourceParent == rel.targetParent;\n\t\t\t\t\tvar targetTask = rel.target;\n\t\t\t\t\tif(!visitedTasks[targetTask])\n\t\t\t\t\t\ttasksStack.push({from: rel.target, includePredecessors: true, isChild: isSameParent});\n\t\t\t\t}\n\t\n\t\t\t\tif(gantt.hasChild(rootObj.id)){\n\t\t\t\t\tvar children = gantt.getChildren(rootObj.id);\n\t\t\t\t\tfor(var i=0; i < children.length; i++){\n\t\t\t\t\t\tif(!visitedTasks[children[i]])\n\t\t\t\t\t\t\ttasksStack.push({from: children[i], includePredecessors: true, isChild: true});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t}\n\t};\n};","var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback) {\n\tif (arr.forEach) {\n\t\tarr.forEach(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback) {\n\tif (arr.map) {\n\t\treturn arr.map(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\t\treturn resArray;\n\t}\n}\n\n\nfunction arrayFind(arr, callback) {\n\tif (arr.find) {\n\t\treturn arr.find(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// iframe-safe array type check instead of using instanceof\nfunction isArray(obj){\n\tif(Array.isArray){\n\t\treturn Array.isArray(obj);\n\t}else{\n\t\t// close enough\n\t\treturn (obj && obj.length !== undefined && obj.pop && obj.push);\n\t}\n}\n\n// non-primitive string object, e.g. new String(\"abc\")\nfunction isStringObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function String() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Number(5)\nfunction isNumberObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Number() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Boolean(true)\nfunction isBooleanObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Boolean() { [native code] }\";\n}\n\nfunction isDate(obj) {\n\tif (obj && typeof obj === \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction arrayFilter(arr, callback) {\n\tvar result = [];\n\n\tif (arr.filter) {\n\t\treturn arr.filter(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\tresult[result.length] = arr[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction hashToArray(hash) {\n\tvar result = [];\n\n\tfor (var key in hash) {\n\t\tif (hash.hasOwnProperty(key)) {\n\t\t\tresult.push(hash[key]);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction arraySome(arr, callback) {\n\tif (arr.length === 0) return false;\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (callback(arr[i], i, arr)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction arrayDifference(arr, callback) {\n\treturn arrayFilter(arr, function(item, i) {\n\t\treturn !callback(item, i);\n\t});\n}\n\nfunction throttle (callback, timeout) {\n\tvar wait = false;\n\n\treturn function () {\n\t\tif (!wait) {\n\t\t\tcallback.apply(null, arguments);\n\t\t\twait = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\twait = false;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction delay (callback, timeout){\n\tvar timer;\n\n\tvar result = function() {\n\t\tresult.$cancelTimeout();\n\t\tcallback.$pending = true;\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\ttimer = setTimeout(function(){\n\t\t\tcallback.apply(this, args);\n\t\t\tresult.$pending = false;\n\t\t}, timeout);\n\t};\n\t\n\tresult.$pending = false;\n\tresult.$cancelTimeout = function(){\n\t\tclearTimeout(timer);\n\t\tcallback.$pending = false;\n\t};\n\tresult.$execute = function(){\n\t\tcallback();\n\t\tcallback.$cancelTimeout();\n\t};\n\n\treturn result;\n}\n\nfunction sortArrayOfHash(arr, field, desc) {\n\tvar compare = function(a, b) {\n\t\treturn a < b;\n\t};\n\n\tarr.sort(function(a, b) {\n\t\tif (a[field] === b[field]) return 0;\n\n\t\treturn desc ? compare(a[field], b[field]) : compare(b[field], a[field]);\n\t});\n}\n\nfunction objectKeys(obj) {\n\tif (Object.keys) {\n\t\treturn Object.keys(obj);\n\t}\n\tvar result = [];\n\tvar key;\n\tfor (key in obj) {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\tresult.push(key);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction requestAnimationFrame(callback) {\n\tvar w = window;\n\tvar foundRequestAnimationFrame = w.requestAnimationFrame\n\t\t|| w.webkitRequestAnimationFrame\n\t\t|| w.msRequestAnimationFrame\n\t\t|| w.mozRequestAnimationFrame\n\t\t|| w.oRequestAnimationFrame\n\t\t|| function(cb) { setTimeout(cb, 1000/60); };\n\treturn foundRequestAnimationFrame(callback);\n}\n\nfunction isEventable(obj) {\n\treturn obj.attachEvent && obj.detachEvent;\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap,\n\tarrayFind: arrayFind,\n\tarrayFilter: arrayFilter,\n\tarrayDifference: arrayDifference,\n\tarraySome: arraySome,\n\thashToArray: hashToArray,\n\tsortArrayOfHash: sortArrayOfHash,\n\tthrottle: throttle,\n\tisArray: isArray,\n\tisDate: isDate,\n\tisStringObject: isStringObject,\n\tisNumberObject: isNumberObject,\n\tisBooleanObject: isBooleanObject,\n\tdelay: delay,\n\tobjectKeys: objectKeys,\n\trequestAnimationFrame: requestAnimationFrame,\n\tisEventable: isEventable\n};","var helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(){\n\treturn {\n\t\tgetVertices: function(relations){\n\t\t\tvar ids = {};\n\t\t\tvar rel;\n\t\t\tfor(var i = 0, len = relations.length; i < len; i++){\n\t\t\t\trel = relations[i];\n\t\t\t\tids[rel.target] = rel.target;\n\t\t\t\tids[rel.source] = rel.source;\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\t\t\tvar id;\n\t\t\tfor(var i in ids){\n\t\t\t\tid = ids[i];\n\t\t\t\tvertices.push(id);\n\t\t\t}\n\n\t\t\treturn vertices;\n\t\t},\n\t\ttopologicalSort: function(edges){\n\t\t\tvar vertices = this.getVertices(edges);\n\t\t\tvar hash = {};\n\n\t\t\tfor(var i = 0, len = vertices.length; i < len; i ++){\n\t\t\t\thash[vertices[i]] = {id: vertices[i], $source:[], $target:[], $incoming: 0};\n\t\t\t}\n\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tvar successor = hash[edges[i].target];\n\t\t\t\tsuccessor.$target.push(i);\n\t\t\t\tsuccessor.$incoming = successor.$target.length;\n\t\t\t\thash[edges[i].source].$source.push(i);\n\n\t\t\t}\n\n\t\t\t// topological sort, Kahn's algorithm\n\t\t\tvar S = vertices.filter(function(v){ return !hash[v].$incoming; });\n\n\t\t\tvar L = [];\n\n\t\t\twhile(S.length){\n\t\t\t\tvar n = S.pop();\n\n\t\t\t\tL.push(n);\n\n\t\t\t\tvar node = hash[n];\n\n\t\t\t\tfor(var i = 0; i < node.$source.length; i++){\n\t\t\t\t\tvar m = hash[edges[node.$source[i]].target];\n\t\t\t\t\tm.$incoming--;\n\t\t\t\t\tif(!m.$incoming){\n\t\t\t\t\t\tS.push(m.id);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn L;\n\n\t\t},\n\t\tgroupAdjacentEdges: function(edges){\n\t\t\tvar res = {};\n\t\t\tvar edge;\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tedge = edges[i];\n\t\t\t\tif(!res[edge.source]){\n\t\t\t\t\tres[edge.source] = [];\n\t\t\t\t}\n\t\t\t\tres[edge.source].push(edge);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\ttarjanStronglyConnectedComponents: function(vertices, edges){\n\t\t\t//https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\n\t\t\t// iterative implementation\n\t\t\tvar verticesHash = {};\n\t\t\tvar stack = [];\n\t\t\tvar edgesFromTasks = this.groupAdjacentEdges(edges);\n\t\t\tvar recurse = false;\n\t\t\tvar connectedComponents = [];\n\n\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\tvar root = getVertex(vertices[i]);\n\t\t\t\tif(root.visited) continue;\n\t\t\t\tvar workStack = [root];\n\t\t\t\tvar index = 0;\n\t\t\t\twhile(workStack.length){\n\t\t\t\t\tvar v = workStack.pop();\n\n\t\t\t\t\tif(!v.visited){\n\t\t\t\t\t\tv.index = index;\n\t\t\t\t\t\tv.lowLink = index;\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tstack.push(v);\n\t\t\t\t\t\tv.onStack = true;\n\t\t\t\t\t\tv.visited = true;\n\t\t\t\t\t}\n\t\t\t\t\trecurse = false;\n\t\t\t\t\tvar edges = edgesFromTasks[v.id] || [];\n\t\t\t\t\tfor(var e = 0; e < edges.length; e++){\n\t\t\t\t\t\tvar w = getVertex(edges[e].target);\n\t\t\t\t\t\tw.edge = edges[e];\n\t\t\t\t\t\tif(w.index === undefined){\n\t\t\t\t\t\t\tworkStack.push(v);\n\t\t\t\t\t\t\tworkStack.push(w);\n\t\t\t\t\t\t\trecurse = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(w.onStack){\n\t\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(recurse)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tif (v.index == v.lowLink){\n\t\t\t\t\t\tvar com = {tasks:[], links:[]};\n\t\t\t\t\t\twhile(true){\n\t\t\t\t\t\t\tw = stack.pop();\n\t\t\t\t\t\t\tw.onStack = false;\n\t\t\t\t\t\t\tcom.tasks.push(w.id);\n\t\t\t\t\t\t\tif(w.edge){\n\t\t\t\t\t\t\t\tcom.links.push(w.edge.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(w == v){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconnectedComponents.push(com);\n\t\t\t\t\t}\n\t\t\t\t\tif(workStack.length){\n\t\t\t\t\t\tw = v;\n\t\t\t\t\t\tv = workStack[workStack.length - 1];\n\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.lowLink);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn connectedComponents;\n\n\t\t\tfunction getVertex(id){\n\t\t\t\tif(!verticesHash[id]){\n\t\t\t\t\tverticesHash[id] = {id: id, onStack:false, index: undefined, lowLink: undefined, edge: undefined};\n\t\t\t\t}\n\n\t\t\t\treturn verticesHash[id];\n\t\t\t}\n\t\t},\n\n\t\tfindLoops: function(relations){\n\t\t\tvar cycles = [];\n\n\t\t\thelpers.forEach(relations, function(rel){\n\t\t\t\tif(rel.target == rel.source)\n\t\t\t\t\tcycles.push([rel.target, rel.source]);\n\t\t\t});\n\n\t\t\tvar vertices = this.getVertices(relations);\n\n\t\t\tvar connectedComponents = this.tarjanStronglyConnectedComponents(vertices, relations);\n\t\t\thelpers.forEach(connectedComponents, function(component){\n\t\t\t\tif(component.tasks.length > 1){\n\t\t\t\t\tcycles.push(component);//{ tasks: [task ids], links: [links ids]}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn cycles;\n\t\t\t//{task:id, link:link.type, lag: link.lag || 0, source: link.source}\n\t\t}\n\t};\n};","module.exports = function (gantt) {\n\t// helpers for building chain of dependencies, used for critical path calculation and for auto scheduling\n\n\tgantt._get_linked_task = function (link, getTarget) {\n\t\tvar task = null;\n\t\tvar taskId = getTarget ? link.target : link.source;\n\n\t\tif (gantt.isTaskExists(taskId)) {\n\t\t\ttask = gantt.getTask(taskId);\n\t\t}\n\n\t\treturn task;\n\t};\n\tgantt._get_link_target = function (link) {\n\t\treturn gantt._get_linked_task(link, true);\n\t};\n\n\tgantt._get_link_source = function (link) {\n\t\treturn gantt._get_linked_task(link, false);\n\t};\n\n\tvar caching = false;\n\tvar formattedLinksStash = {};\n\tvar inheritedSuccessorsStash = {};\n\tvar inheritedPredecessorsStash = {};\n\tvar getPredecessorsCache = {};\n\n\n\tgantt._isLinksCacheEnabled = function () {\n\t\treturn caching;\n\t};\n\tgantt._startLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = true;\n\t};\n\tgantt._endLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = false;\n\t};\n\n\tgantt._formatLink = function (link) {\n\n\n\t\tif (caching && formattedLinksStash[link.id]) {\n\t\t\treturn formattedLinksStash[link.id];\n\t\t}\n\n\t\tvar relations = [];\n\t\tvar target = this._get_link_target(link);\n\t\tvar source = this._get_link_source(link);\n\n\t\tif (!(source && target)) {\n\t\t\treturn relations;\n\t\t}\n\n\t\tif ((gantt.isSummaryTask(target) && gantt.isChildOf(source.id, target.id)) || (gantt.isSummaryTask(source) && gantt.isChildOf(target.id, source.id))) {\n\t\t\treturn relations;\n\t\t}\n\n\n\t\t// there are three kinds of connections at this point\n\t\t// task -> task - regular link\n\t\t// task -> project - transform it into set of regular links (task -> [each subtask]), use offset beetween subtask and project dates as lag, in order not to change mutual positions of subtasks inside a project\n\t\t// project -> task - transform it into ([each subtask] -> task) links\n\t\t// project -> project - transform it into ([each subtask of p1] -> [each subtask of p2]) links\n\n\t\tvar from = this._getImplicitLinks(link, source, function (c) {\n\t\t\treturn 0;\n\t\t}, true);\n\n\t\tvar respectTargetOffset = gantt.config.auto_scheduling_move_projects;\n\t\tvar targetDates = this.isSummaryTask(target) ? this.getSubtaskDates(target.id) : {\n\t\t\tstart_date: target.start_date,\n\t\t\tend_date: target.end_date\n\t\t};\n\t\tvar to = this._getImplicitLinks(link, target, function (c) {\n\t\t\tif (!respectTargetOffset) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\n\t\t\t\tif (!c.$target.length && !(gantt.getState().drag_id == c.id)) {// drag_id - virtual lag shouldn't restrict task that is being moved inside project\n\t\t\t\t\treturn gantt.calculateDuration({\n\t\t\t\t\t\tstart_date: targetDates.start_date,\n\t\t\t\t\t\tend_date: c.start_date,\n\t\t\t\t\t\ttask: source\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfor (var i = 0, fromLength = from.length; i < fromLength; i++) {\n\t\t\tvar fromTask = from[i];\n\t\t\tfor (var j = 0, toLength = to.length; j < toLength; j++) {\n\t\t\t\tvar toTask = to[j];\n\n\t\t\t\tvar lag = fromTask.lag * 1 + toTask.lag * 1;\n\n\t\t\t\tvar subtaskLink = {\n\t\t\t\t\tid: link.id,\n\t\t\t\t\ttype: link.type,\n\t\t\t\t\tsource: fromTask.task,\n\t\t\t\t\ttarget: toTask.task,\n\t\t\t\t\tlag: (link.lag * 1 || 0) + lag\n\t\t\t\t};\n\n\t\t\t\trelations.push(gantt._convertToFinishToStartLink(toTask.task, subtaskLink, source, target, fromTask.taskParent, toTask.taskParent));\n\t\t\t}\n\t\t}\n\n\t\tif (caching)\n\t\t\tformattedLinksStash[link.id] = relations;\n\n\t\treturn relations;\n\t};\n\n\tgantt._isAutoSchedulable = function (task) {\n\t\treturn task.auto_scheduling !== false;\n\t};\n\n\tgantt._getImplicitLinks = function (link, parent, selectOffset, selectSourceLinks) {\n\t\tvar relations = [];\n\n\t\tif (this.isSummaryTask(parent)) {\n\n\t\t\t// if the summary task contains multiple chains of linked tasks - no need to consider every task of the chain,\n\t\t\t// it will be enough to check the first/last tasks of the chain\n\t\t\t// special conditions if there are unscheduled tasks in the chain, or negative lag values that put the end date of the successor task prior to its predecessors' date\n\t\t\tvar children = {};\n\t\t\tthis.eachTask(function (c) {\n\t\t\t\tif (!this.isSummaryTask(c)) {\n\t\t\t\t\tchildren[c.id] = c;\n\t\t\t\t}\n\t\t\t}, parent.id);\n\n\t\t\tvar skipChild;\n\n\t\t\tfor (var c in children) {\n\t\t\t\tvar task = children[c];\n\t\t\t\tvar linksCollection = selectSourceLinks ? task.$source : task.$target;\n\n\t\t\t\tskipChild = false;\n\n\t\t\t\tfor (var l = 0; l < linksCollection.length; l++) {\n\t\t\t\t\tvar siblingLink = gantt.getLink(linksCollection[l]);\n\t\t\t\t\tvar siblingId = selectSourceLinks ? siblingLink.target : siblingLink.source;\n\t\t\t\t\tvar siblingTask = children[siblingId];\n\t\t\t\t\tif (siblingTask && task.auto_scheduling !== false && siblingTask.auto_scheduling !== false) {\n\t\t\t\t\t\tif ((siblingLink.target == siblingTask.id && Math.abs(siblingLink.lag) <= siblingTask.duration) ||\n\t\t\t\t\t\t\t(siblingLink.target == task.id && Math.abs(siblingLink.lag) <= task.duration)) {\n\t\t\t\t\t\t\tskipChild = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skipChild) {\n\t\t\t\t\trelations.push({ task: task.id, taskParent: task.parent, lag: selectOffset(task) });\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\trelations.push({ task: parent.id, taskParent: parent.parent, lag: 0 });\n\t\t}\n\n\t\treturn relations;\n\t};\n\n\tgantt._getDirectDependencies = function (task, selectSuccessors) {\n\n\t\tvar links = [],\n\t\t\tsuccessors = [];\n\n\t\tvar linksIds = selectSuccessors ? task.$source : task.$target;\n\n\t\tfor (var i = 0; i < linksIds.length; i++) {\n\t\t\tvar link = this.getLink(linksIds[i]);\n\t\t\tif (this.isTaskExists(link.source) && this.isTaskExists(link.target)) {\n\t\t\t\tvar target = this.getTask(link.target);\n\t\t\t\tif (this._isAutoSchedulable(target)) {\n\t\t\t\t\tlinks.push(this.getLink(linksIds[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tsuccessors = successors.concat(this._formatLink(links[i]));\n\t\t}\n\n\t\treturn successors;\n\t};\n\n\tgantt._getInheritedDependencies = function (task, selectSuccessors) {\n\n\t\t//var successors = [];\n\t\tvar stop = false;\n\t\tvar inheritedRelations = [];\n\t\tvar cacheCollection;\n\t\tif (this.isTaskExists(task.id)) {\n\t\t\tthis.eachParent(function (parent) {\n\t\t\t\tif (stop)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (caching) {\n\t\t\t\t\tcacheCollection = selectSuccessors ? inheritedSuccessorsStash : inheritedPredecessorsStash;\n\t\t\t\t\tif (cacheCollection[parent.id]) {\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(cacheCollection[parent.id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar parentDependencies;\n\t\t\t\tif (this.isSummaryTask(parent)) {\n\t\t\t\t\tif (!this._isAutoSchedulable(parent)) {\n\t\t\t\t\t\tstop = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparentDependencies = this._getDirectDependencies(parent, selectSuccessors);\n\t\t\t\t\t\tif (caching) {\n\t\t\t\t\t\t\tcacheCollection[parent.id] = parentDependencies;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(parentDependencies);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}, task.id, this);\n\t\t}\n\n\t\treturn inheritedRelations;\n\t};\n\n\n\tgantt._getDirectSuccessors = function (task) {\n\t\treturn this._getDirectDependencies(task, true);\n\t};\n\n\tgantt._getInheritedSuccessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, true);\n\t};\n\n\tgantt._getDirectPredecessors = function (task) {\n\t\treturn this._getDirectDependencies(task, false);\n\t};\n\n\tgantt._getInheritedPredecessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, false);\n\t};\n\n\tgantt._getSuccessors = function (task, skipInherited) {\n\t\tvar successors = this._getDirectSuccessors(task);\n\t\tif (skipInherited) {\n\t\t\treturn successors;\n\t\t} else {\n\t\t\treturn successors.concat(this._getInheritedSuccessors(task));\n\t\t}\n\t};\n\n\tgantt._getPredecessors = function (task, skipInherited) {\n\t\tvar key = String(task.id) + \"-\" + String(skipInherited);\n\t\tvar result;\n\n\t\tif (caching && getPredecessorsCache[key]) {\n\t\t\treturn getPredecessorsCache[key];\n\t\t}\n\n\t\tvar predecessors = this._getDirectPredecessors(task);\n\t\tif (skipInherited) {\n\t\t\tresult = predecessors;\n\t\t} else {\n\t\t\tresult = predecessors.concat(this._getInheritedPredecessors(task));\n\t\t}\n\t\tif (caching) {\n\t\t\tgetPredecessorsCache[key] = result;\n\t\t}\n\t\treturn result;\n\t};\n\n\n\tgantt._convertToFinishToStartLink = function (id, link, sourceTask, targetTask, sourceParent, targetParent) {\n\t\t// convert finish-to-finish, start-to-finish and start-to-start to finish-to-start link and provide some additional properties\n\t\tvar res = {\n\t\t\ttarget: id,\n\t\t\tlink: gantt.config.links.finish_to_start,\n\t\t\tid: link.id,\n\t\t\tlag: link.lag || 0,\n\t\t\tsource: link.source,\n\t\t\tpreferredStart: null,\n\t\t\tsourceParent: sourceParent,\n\t\t\ttargetParent: targetParent,\n\t\t\thashSum: null\n\t\t};\n\n\t\tvar additionalLag = 0;\n\t\tswitch (link.type) {\n\t\t\tcase gantt.config.links.start_to_start:\n\t\t\t\tadditionalLag = -sourceTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.finish_to_finish:\n\t\t\t\tadditionalLag = -targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.start_to_finish:\n\t\t\t\tadditionalLag = -sourceTask.duration - targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tadditionalLag = 0;\n\t\t}\n\n\t\tres.lag += additionalLag;\n\t\tres.hashSum = res.lag + \"_\" + res.link + \"_\" + res.source + \"_\" + res.target;\n\t\treturn res;\n\t};\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar graphHelper = require(\"../../core/relations/graph_helper\")(gantt);\n\nmodule.exports = function(gantt){\n\n\tgantt._isProjectEnd = function(task) {\n\t\treturn !(this._hasDuration({\n\t\t\tstart_date: task.end_date,\n\t\t\tend_date: this._getProjectEnd(),\n\t\t\ttask: task\n\t\t}));\n\t};\n\n\treturn {\n\t\t_needRecalc: true,\n\t\t_cache: null,\n\t\treset: function(){\n\t\t\tthis._needRecalc = true;\n\t\t\tthis._cache = null;\n\t\t},\n\t\t_isRecalcNeeded: function(){\n\t\t\treturn this._needRecalc;\n\t\t},\n\t\t_getLinks: function(){\n\t\t\tvar links = linksBuilder.getLinkedTasks();\n\t\t\treturn graphHelper.groupAdjacentEdges(links);\n\t\t},\n\t\t_calculateBranch: function(task, path, criticalTasks, adjacentLinks){\n\t\t\tpath[task.id] = true;\n\t\t\tif(criticalTasks[task.id] !== undefined){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar stack = [task];\n\n\t\t\twhile(stack.length) {\n\t\t\t\ttask = stack.pop();\n\n\t\t\t\tif(criticalTasks[task.id] || gantt._isProjectEnd(task)){\n\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\twhile(stack.length){\n\t\t\t\t\t\tvar task = stack.pop();\n\t\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tcriticalTasks[task.id] = false;\n\t\t\t\t\tvar successors = adjacentLinks[task.id] || [];\n\t\t\t\t\tfor (var i = 0; i < successors.length; i++) {\n\n\t\t\t\t\t\tvar next = gantt.getTask(successors[i].target);\n\t\t\t\t\t\tif (gantt._getSlack(task, next, successors[i]) <= 0 && (!path[next.id] || criticalTasks[next.id])) {\n\t\t\t\t\t\t\tpath[next.id] = true;\n\n\t\t\t\t\t\t\tstack.push(task);\n\t\t\t\t\t\t\tstack.push(next);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_calculateSummaryTasks: function(summaryHash, criticalHash){\n\t\t\tfor(var i in criticalHash){\n\t\t\t\tif(criticalHash[i]){\n\t\t\t\t\tvar parent = gantt.getParent(i);\n\t\t\t\t\twhile(summaryHash[parent] === undefined && gantt.isTaskExists(parent)){\n\t\t\t\t\t\tsummaryHash[parent] = true;\n\t\t\t\t\t\tparent = gantt.getParent(parent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(var i in summaryHash){\n\t\t\t\tcriticalHash[i] = !!summaryHash[i];\n\t\t\t}\n\t\t},\n\n\t\t_calculate: function calculateCriticalPath(){\n\t\t\tvar criticalTasks = {};\n\t\t\tvar clearCache = false;\n\t\t\tvar path = {};\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar links = this._getLinks();\n\n\t\t\tvar summaryTasks = {};\n\t\t\tgantt.eachTask(function(task){\n\t\t\t\tif(path[task.id])\n\t\t\t\t\treturn;\n\t\t\t\tif(gantt.isSummaryTask(task)){\n\t\t\t\t\tsummaryTasks[task.id] = undefined;\n\t\t\t\t}else{\n\t\t\t\t\tthis._calculateBranch(task, path, criticalTasks, links);\n\t\t\t\t}\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tthis._calculateSummaryTasks(summaryTasks, criticalTasks);\n\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn criticalTasks;\n\t\t},\n\n\t\tisCriticalTask: function(task) {\n\t\t\tif(!task) return false;\n\n\t\t\tif(this._isRecalcNeeded()){\n\t\t\t\tthis._cache = this._calculate();\n\t\t\t\tthis._needRecalc = false;\n\t\t\t}\n\n\t\t\treturn this._cache[task.id];\n\t\t},\n\n\t\tinit: function(){\n\t\t\tvar resetCache = gantt.bind(function(){\n\t\t\t\tthis.reset();\n\t\t\t\treturn true;\n\t\t\t}, this);\n\n\t\t\tvar handleTaskIdChange = gantt.bind(function (oldId, newId) {\n\t\t\t\tif (this._cache) {\n\t\t\t\t\tthis._cache[newId] = this._cache[oldId];\n\t\t\t\t\tdelete this._cache[oldId];\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}, this);\n\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", handleTaskIdChange);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onParse\", resetCache);\n\t\t\tgantt.attachEvent(\"onClearAll\", resetCache);\n\n\n\t\t\tvar criticalPathHandler = function(){\n\t\t\t\tif(gantt.config.highlight_critical_path)\n\t\t\t\t\tgantt.render();\n\t\t\t};\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", function (oldId, newId) {\n\t\t\t\tif (gantt.config.highlight_critical_path && gantt.isTaskExists(newId)) {\n\t\t\t\t\tgantt.refreshTask(newId);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", criticalPathHandler);\n\t\t}\n\t};\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\tvar _private = {\n\t\t_freeSlack: {},\n\t\t_totalSlack: {},\n\t\t_slackNeedCalculate: true,\n\t\t_linkedTasksById: {},\n\t\t_calculateTotalSlack: function() {\n\t\t\tvar linksByTaskId = this._linkedTasksById;\n\n\t\t\thelpers.forEach(linksBuilder.getLinkedTasks(), function(entry) {\n\t\t\t\tvar task = gantt.getTask(entry.target);\n\t\t\t\tvar slack = gantt.getFreeSlack(task);\n\n\t\t\t\tif (!linksByTaskId[entry.source]) {\n\t\t\t\t\tlinksByTaskId[entry.source] = {\n\t\t\t\t\t\tminSlack: {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlinked: []\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tif (slack < linksByTaskId[entry.source].minSlack.slack) {\n\t\t\t\t\t\tlinksByTaskId[entry.source].minSlack = {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlinksByTaskId[entry.source].linked.push({\n\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\tslack: slack\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tvar totalSlackByTaskId = {};\n\n\t\t\tgantt.eachTask(function(entry) {\n\t\t\t\tif (gantt.isSummaryTask(entry)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (totalSlackByTaskId[entry.id] === undefined) {\n\t\t\t\t\ttotalSlackByTaskId[entry.id] = 0;\n\t\t\t\t}\n\t\t\t\ttotalSlackByTaskId[entry.id] += _private._chainSlackCount(entry);\n\t\t\t});\n\n\t\t\tgantt._slacksChanged = false;\n\t\t\tthis._slackNeedCalculate = false;\n\t\t\tthis._totalSlack = totalSlackByTaskId;\n\n\t\t\treturn totalSlackByTaskId;\n\t\t},\n\t\t_chainSlackCount: function(entry, additional) {\n\t\t\tadditional = additional || 0;\n\t\t\tswitch (true) {\n\t\t\tcase (!this._linkedTasksById[entry.id]):\n\t\t\t\treturn gantt.calculateDuration(entry.end_date, gantt.getSubtaskDates().end_date) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length === 1):\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(this._linkedTasksById[entry.id].linked[0].target), gantt.getFreeSlack(entry)) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length > 1):\n\t\t\t\tvar targetWithMinimalSlack = this._getTargetWithMinimalSlack(this._linkedTasksById[entry.id].linked);\n\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(targetWithMinimalSlack.target), gantt.getFreeSlack(entry)) + additional;\n\t\t\t}\n\t\t},\n\n\t\t_getTargetWithMinimalSlack: function(linked) {\n\t\t\tvar result;\n\t\t\thelpers.forEach(linked, function(entry) {\n\t\t\t\tif (result === undefined || entry.slack < result.slack) {\n\t\t\t\t\tresult = entry;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t},\n\n\t\t_calculateTaskSlack: function(task) {\n\t\t\tvar slack;\n\n\t\t\tif (task.$source && task.$source.length) {\n\t\t\t\tslack = this._calculateRelationSlack(task);\n\t\t\t} else {\n\t\t\t\tslack = this._calculateHierarchySlack(task);\n\t\t\t}\n\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateRelationSlack: function(task) {\n\t\t\tvar minSlack = 0,\n\t\t\t\tslack,\n\t\t\t\tlinks = task.$source;\n\n\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\tslack = this._calculateLinkSlack(links[i]);\n\t\t\t\tif (minSlack > slack || i === 0) {\n\t\t\t\t\tminSlack = slack;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn minSlack;\n\t\t},\n\n\t\t_calculateLinkSlack: function(linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\tvar slack = 0;\n\t\t\tif (gantt.isTaskExists(link.source) && gantt.isTaskExists(link.target)) {\n\t\t\t\tslack = gantt.getSlack(gantt.getTask(link.source), gantt.getTask(link.target));\n\t\t\t}\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateHierarchySlack: function(task) {\n\t\t\tvar slack = 0;\n\t\t\tvar from;\n\t\t\tvar to = gantt.getSubtaskDates().end_date;\n\t\t\tif (gantt.isTaskExists(task.parent)) {\n\t\t\t\tfrom = gantt.getSubtaskDates(task.id).end_date || task.end_date;\n\t\t\t} else {\n\t\t\t\tfrom = task.end_date;\n\t\t\t}\n\t\t\tslack = Math.max(gantt.calculateDuration(from, to), 0);\n\t\t\treturn slack;\n\t\t},\n\n\t\t_resetTotalSlackCache: function() {\n\t\t\tthis._slackNeedCalculate = true;\n\t\t},\n\n\t\t_shouldCalculateTotalSlack: function() {\n\t\t\treturn this._slackNeedCalculate;\n\t\t},\n\n\t\tgetFreeSlack: function(task) {\n\t\t\tif (!gantt.isTaskExists(task.id)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!this._freeSlack[task.id]) {\n\t\t\t\tif (gantt.isSummaryTask(task)) {\n\t\t\t\t\tthis._freeSlack[task.id] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tthis._freeSlack[task.id] =  this._calculateTaskSlack(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._freeSlack[task.id];\n\t\t},\n\n\t\tgetTotalSlack: function(task) {\n\t\t\tif (this._shouldCalculateTotalSlack()) {\n\t\t\t\tthis._calculateTotalSlack();\n\t\t\t}\n\t\t\tif (task === undefined) {\n\t\t\t\treturn this._totalSlack;\n\t\t\t}\n\t\t\tif (task.id !== undefined) {\n\t\t\t\treturn this._totalSlack[task.id];\n\t\t\t}\n\t\t\treturn this._totalSlack[task] || 0;\n\t\t},\n\n\t\tdropCachedFreeSlack: function() {\n\t\t\tthis._linkedTasksById = {};\n\t\t\tthis._freeSlack =  {};\n\t\t\tthis._resetTotalSlackCache();\n\t\t},\n\n\t\tinit: function(){\n\t\t\tfunction slackHandler(){\n\t\t\t\t_private.dropCachedFreeSlack();\n\t\t\t}\n\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onRowDragEnd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskMove\", slackHandler);\n\t\t}\n\t};\n\n\treturn _private;\n};","require(\"../core/relations/links_common\")(gantt);\n\nvar _private = require(\"./critical_path/slack\")(gantt);\n_private.init();\n\ngantt.getFreeSlack = function(task) {\n\treturn _private.getFreeSlack(task);\n};\n\ngantt.getTotalSlack = function(task) {\n\treturn _private.getTotalSlack(task);\n};\n\nvar criticalPath = require(\"./critical_path/critical_path\")(gantt);\ngantt.config.highlight_critical_path = false;\ncriticalPath.init();\n\ngantt.isCriticalTask = function (task) {\n\tgantt.assert(!!(task && task.id !== undefined), \"Invalid argument for gantt.isCriticalTask\");\n\treturn criticalPath.isCriticalTask(task);\n};\n\ngantt.isCriticalLink = function (link) {\n\treturn this.isCriticalTask(gantt.getTask(link.source));\n};\n\n\ngantt.getSlack = function(task1, task2) {\n\tvar minSlack = 0;\n\tvar relations = [];\n\tvar common = {};\n\n\tfor (var i = 0; i < task1.$source.length; i++) {\n\t\tcommon[task1.$source[i]] = true;\n\t}\n\tfor (var i = 0; i < task2.$target.length; i++) {\n\t\tif(common[task2.$target[i]])\n\t\t\trelations.push(task2.$target[i]);\n\t}\n\n\tfor (var i = 0; i < relations.length; i++) {\n\t\tvar link = this.getLink(relations[i]);\n\t\tvar newSlack = this._getSlack(task1, task2, this._convertToFinishToStartLink(link.id, link, task1, task2, task1.parent, task2.parent));\n\n\t\tif (minSlack > newSlack || i === 0) {\n\t\t\tminSlack = newSlack;\n\t\t}\n\t}\n\n\treturn minSlack;\n};\n\ngantt._getSlack = function (task, next_task, relation) {\n\t// relation - link expressed as finish-to-start (gantt._convertToFinishToStartLink)\n\tvar types = this.config.types;\n\n\tvar from = null;\n\tif (this.getTaskType(task.type) == types.milestone) {\n\t\tfrom = task.start_date;\n\t} else {\n\t\tfrom = task.end_date;\n\t}\n\n\tvar to = next_task.start_date;\n\n\tvar duration = 0;\n\tif (+from > +to) {\n\t\tduration = -this.calculateDuration({start_date: to, end_date: from, task: task});\n\t} else {\n\t\tduration = this.calculateDuration({start_date: from, end_date: to, task: task});\n\t}\n\n\tvar lag = relation.lag;\n\tif (lag && lag*1 == lag) {\n\t\tduration -= lag;\n\t}\n\n\treturn duration;\n};\n\n\n\n"],"sourceRoot":""}